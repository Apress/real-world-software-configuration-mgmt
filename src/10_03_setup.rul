//===============================================================================
//All programming code examples associated with Real World Software Configuration
//Management are copyright 2003 by Sean Kenefick unless otherwise automatically
//generated by a tool (in which case its copyright is held by the applicable
//tool vendor).
//===============================================================================

////////////////////////////////////////////////////////////////////////////////
//  File Name:	Setup.rul                                                   
//  Description:	InstallShield script                                        
//  Comments:	This script was generated based on the selections you made in
//           	the Project Wizard.  Refer to the help topic entitled "Modify      
//           	the script that the Project Wizard generates" for information
//				on possible next steps.
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Both the IDS_C_WINDOWTITLE and IDS_C_SDWELCOMETITLE objects
// were added to the English string table as follows:
// IDS_C_WINDOWTITLE = "cmReady Stock Suite 2.0"
// IDS_C_SDWELCOMETITLE = "Welcome to the cmReady Stock Suite 2.0 setup program.  Click "next" to install and use this product."
////////////////////////////////////////////////////////////////////////////////

// Include header files
#include "ifx.h"
    
////////////////////// string defines ////////////////////////////

//////////////////// installation declarations ///////////////////
// ----- DLL function prototypes -----
    // your DLL function prototypes

// ---- script function prototypes -----
    // your script function prototypes

    // your global variables

//////////////////////////////////////////////////////////////////////////////
//                                                                           
//  FUNCTION:   OnFirstUIBefore                                            
//                                                                           
//  EVENT:      FirstUIBefore event is sent when installation is run for the first
//              time on given machine. In the handler installation usually displays
//              UI allowing end user to specify installation parameters. After this
//              function returns, FeatureTransferData is called to perform file
//              transfer.
//                                                                           
///////////////////////////////////////////////////////////////////////////////
function OnFirstUIBefore()
    number  nResult,nSetupType;
    string  szTitle, szMsg;
    string  szLicenseFile, szQuestion;
    string  szName, szCompany;
    string  szFile;
    string  szTargetPath;
    string  szDir;
    string  szFeatures, szTargetdir;
    number  nLevel;
    LIST    listStartCopy;
    LIST    list;
    number  nvSize;
    number  nUser;
    
//NON INSTALLSHIELD DEFAULT CODE STARTS HERE
    string szSetupType;
//NON INSTALLSHIELD DEFAULT CODE ENDS HERE
    
begin	
    // TO DO: if you want to enable background, window title, and caption bar title                                                                     
    // SetTitle( @PRODUCT_NAME, 24, WHITE );                                        
    // SetTitle( @PRODUCT_NAME, 0, BACKGROUNDCAPTION ); 	                   
    // Enable( FULLWINDOWMODE );					   
    // Enable( BACKGROUND );					
    // SetColor(BACKGROUND,RGB (0, 128, 128));				 
    SHELL_OBJECT_FOLDER = @PRODUCT_NAME;
    nSetupType = TYPICAL;	
    szDir = INSTALLDIR;
    szName    = "";
    szCompany = "";

Dlg_Start:
    // beginning of dialogs label

Dlg_SdWelcome:

//NON INSTALLSHIELD DEFAULT CODE STARTS HERE
    //This code gets strings from the currently loaded language
    //string table and places them in variables.
    szTitle = @IDS_C_WINDOWTITLE;
    szMsg   = @IDS_C_SDWELCOMETITLE;
//NON INSTALLSHIELD DEFAULT CODE STARTS HERE

    nResult = SdWelcome( szTitle, szMsg );
    if (nResult = BACK) goto Dlg_Start;

Dlg_SdLicense:
//NON INSTALLSHIELD DEFAULT CODE STARTS HERE
    //This code tells the Installer which license file to use
    //when displaying the license textbox.  The SUPPORTDIR
    //variable indicates that I've dropped the license.txt file
    //into the Support Files window listed under Behavior
    //and Logic.  Respective text files should be dropped into 
    //each language supported by your instllation.
    szLicenseFile = SUPPORTDIR ^ "license.txt";
//NON INSTALLSHIELD DEFAULT CODE ENDS HERE

    szTitle    = "";
    szMsg      = "";
    szQuestion = "";
    nResult    = SdLicense( szTitle, szMsg, szQuestion, szLicenseFile );
    if (nResult = BACK) goto Dlg_SdWelcome;

Dlg_SdShowInfoList:
    //sk
    szFile = SUPPORTDIR ^ "readme.txt";
    list = ListCreate( STRINGLIST );
    ListReadFromFile( list, szFile );

//NON INSTALLSHIELD DEFAULT CODE STARTS HERE
    //This code gets strings from the currently loaded language
    //string table and places them in variables.
    szTitle = @IDS_C_WINDOWTITLE;
//NON INSTALLSHIELD DEFAULT CODE ENDS HERE

    szMsg    = "";
    nResult  = SdShowInfoList( szTitle, szMsg, list );	
    ListDestroy( list );
    if (nResult = BACK) goto Dlg_SdLicense;

Dlg_SdCustomerInformation:

//NON INSTALLSHIELD DEFAULT CODE STARTS HERE
    //This code gets strings from the currently loaded language
    //string table and places them in variables.
    szTitle = @IDS_C_WINDOWTITLE;
//NON INSTALLSHIELD DEFAULT CODE ENDS HERE

    szMsg   = "";
    nResult = SdCustomerInformation( szTitle, szName, szCompany, nUser );
    if (nResult = BACK) goto Dlg_SdShowInfoList;

Dlg_SdAskDestPath:

//NON INSTALLSHIELD DEFAULT CODE STARTS HERE
    //This code gets strings from the currently loaded language
    //string table and places them in variables.
    szTitle = @IDS_C_WINDOWTITLE;
//NON INSTALLSHIELD DEFAULT CODE ENDS HERE

    szMsg   = "";
    nResult = SdAskDestPath( szTitle, szMsg, szDir, 0 );
    INSTALLDIR = szDir;
    if (nResult = BACK) goto Dlg_SdCustomerInformation;

Dlg_SetupType:   

//NON INSTALLSHIELD DEFAULT CODE STARTS HERE
    //This code gets strings from the currently loaded language
    //string table and places them in variables.
    szTitle = @IDS_C_WINDOWTITLE;
//NON INSTALLSHIELD DEFAULT CODE ENDS HERE

    szMsg      = "";
    nResult = SetupType ( szTitle , szMsg , "" , nSetupType , 0 );
    if (nResult = BACK) then
        goto Dlg_SdAskDestPath;
    else
        nSetupType = nResult;
        if (nSetupType != CUSTOM) then
	       szTargetPath = INSTALLDIR;
	       nvSize = 0;
	       FeatureCompareSizeRequired(MEDIA,szTargetPath,nvSize);
	       if (nvSize != 0) then      
            	   MessageBox( szSdStr_NotEnoughSpace, WARNING );
	           goto Dlg_SetupType;
            endif;
        endif;   
    endif;

Dlg_SdFeatureTree: 
    if ((nResult = BACK) && (nSetupType != CUSTOM)) goto Dlg_SetupType;

//NON INSTALLSHIELD DEFAULT CODE STARTS HERE
    //This code gets strings from the currently loaded language
    //string table and places them in variables.
    szTitle = @IDS_C_WINDOWTITLE;
//NON INSTALLSHIELD DEFAULT CODE ENDS HERE

    szMsg      = "";
    szTargetdir = INSTALLDIR;
    szFeatures = "";
    nLevel = 2;
    if (nSetupType = CUSTOM) then
		    nResult = SdFeatureTree(szTitle, szMsg, szTargetdir, szFeatures, nLevel);
		    if (nResult = BACK) goto Dlg_SetupType;  
    endif;

Dlg_SdStartCopy:

//NON INSTALLSHIELD DEFAULT CODE STARTS HERE
    //This code gets strings from the currently loaded language
    //string table and places them in variables.
    szTitle = @IDS_C_WINDOWTITLE;
//NON INSTALLSHIELD DEFAULT CODE ENDS HERE

    szMsg   = "";
    listStartCopy = ListCreate( STRINGLIST );
    //The following is an example of how to add a string(szName) to a list(listStartCopy).
    //eg. ListAddString(listStartCopy,szName,AFTER);

//NON INSTALLSHIELD DEFAULT CODE STARTS HERE
    //This code creates a string array which will be loaded into the 
    //textbox for the Ready to Copy dialog box.  The customer's
    //name, company and install directory will be displayed.  The
    //customer can cancel or continue at this point depending on 
    //what they read on this dialog box.
 	ListAddString(listStartCopy, "Stock Suite 2.0 Setup", AFTER);
 	ListAddString(listStartCopy, "", AFTER);
 	ListAddString(listStartCopy, "CUSTOMER INFORMATION", AFTER);
	ListAddString(listStartCopy, "Customer Name = " + szName, AFTER);
           ListAddString(listStartCopy, "Customer Company = " + szCompany, AFTER);
	ListAddString(listStartCopy, "", AFTER);  	
	ListAddString(listStartCopy, "INSTALL INFORMATION", AFTER);  
  	ListAddString(listStartCopy, "Install Directory = " + INSTALLDIR, AFTER);  
  	switch (nSetupType)
  		case CUSTOM:
  			szSetupType = "Custom";
  		case TYPICAL:
  			szSetupType = "Typical";
  		case COMPACT:
  			szSetupType = "Compact";
  	endswitch;
  	ListAddString(listStartCopy, "Install Type = " + szSetupType, AFTER);  
//NON INSTALLSHIELD DEFAULT CODE ENDS HERE

    nResult = SdStartCopy( szTitle, szMsg, listStartCopy );	
    ListDestroy(listStartCopy);
    if (nResult = BACK) goto Dlg_SdFeatureTree;

    Enable(STATUSEX);

    return 0;
end;

///////////////////////////////////////////////////////////////////////////////
//
//  FUNCTION:   OnMaintUIBefore
//
//  EVENT:      MaintUIBefore event is sent when end user runs installation that
//              has already been installed on the machine. Usually this happens 
//              through Add/Remove Programs applet. In the handler, installation 
//              usually displays UI allowing end user to modify existing installation
//              or uninstall application. After this function returns, 
//              FeatureTransferData is called to perform file transfer.
//
///////////////////////////////////////////////////////////////////////////////
function OnMaintUIBefore()
    NUMBER nResult, nType;
    STRING szTitle, szMsg, svDir, svResult, szCaption;
begin
    // TO DO: if you want to enable background, window title, and caption bar title   								
    // SetTitle( @PRODUCT_NAME, 24, WHITE );					
    // SetTitle( @PRODUCT_NAME, 0, BACKGROUNDCAPTION );  			
    // SetColor(BACKGROUND,RGB (0, 128, 128));					
    // Enable( FULLWINDOWMODE );						
    // Enable( BACKGROUND );							
	
Dlg_Start:
    Disable(BACKBUTTON);
    nType = SdWelcomeMaint(szTitle, szMsg, MODIFY);
    Enable(BACKBUTTON);

    if (nType = REMOVEALL) then
        svResult = SdLoadString(IFX_MAINTUI_MSG);
        szCaption = SdLoadString(IFX_ONMAINTUI_CAPTION);
        nResult = SprintfBox(MB_OKCANCEL,szCaption,"%s",svResult);
        if (nResult = IDCANCEL) goto Dlg_Start;
    endif;

    nResult = NEXT;

Dlg_SdFeatureTree:
    if (nType = MODIFY) then
        szTitle = "";
        szMsg = "";
        nResult = SdFeatureTree(szTitle, szMsg, INSTALLDIR, "", 2);
        if (nResult = BACK) goto Dlg_Start;
    endif;

    switch(nType)
        case REMOVEALL: FeatureRemoveAll();
        case REPAIR:    FeatureReinstall();
    endswitch;
    
    Enable(STATUSEX);
end;
